# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import learn_raft_kvstore.stubs.kvstore_pb2 as kvstore__pb2


class KeyValueStoreStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get = channel.unary_unary(
            '/learn_raft.KeyValueStore/get',
            request_serializer=kvstore__pb2.GetCommand.SerializeToString,
            response_deserializer=kvstore__pb2.GetCommandResponse.FromString,
        )
        self.set = channel.unary_unary(
            '/learn_raft.KeyValueStore/set',
            request_serializer=kvstore__pb2.SetCommand.SerializeToString,
            response_deserializer=kvstore__pb2.SetCommandResponse.FromString,
        )


class KeyValueStoreServicer(object):
    """Missing associated documentation comment in .proto file."""

    def get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KeyValueStoreServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'get': grpc.unary_unary_rpc_method_handler(
            servicer.get,
            request_deserializer=kvstore__pb2.GetCommand.FromString,
            response_serializer=kvstore__pb2.GetCommandResponse.SerializeToString,
        ),
        'set': grpc.unary_unary_rpc_method_handler(
            servicer.set,
            request_deserializer=kvstore__pb2.SetCommand.FromString,
            response_serializer=kvstore__pb2.SetCommandResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'learn_raft.KeyValueStore', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class KeyValueStore(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/learn_raft.KeyValueStore/get',
                                             kvstore__pb2.GetCommand.SerializeToString,
                                             kvstore__pb2.GetCommandResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/learn_raft.KeyValueStore/set',
                                             kvstore__pb2.SetCommand.SerializeToString,
                                             kvstore__pb2.SetCommandResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
